// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_LightProgram
#define INCLUDED_LightProgram

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_Program
#include <Program.h>
#endif
HX_DECLARE_CLASS0(LightProgram)
HX_DECLARE_CLASS0(Program)
HX_DECLARE_CLASS4(lime,_internal,backend,native,NativeOpenGLRenderContext)



class HXCPP_CLASS_ATTRIBUTES LightProgram_obj : public  ::Program_obj
{
	public:
		typedef  ::Program_obj super;
		typedef LightProgram_obj OBJ_;
		LightProgram_obj();

	public:
		enum { _hx_ClassId = 0x051ee72e };

		void __construct( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="LightProgram")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"LightProgram"); }
		static ::hx::ObjectPtr< LightProgram_obj > __new( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl);
		static ::hx::ObjectPtr< LightProgram_obj > __alloc(::hx::Ctx *_hx_ctx, ::lime::_internal::backend::native::NativeOpenGLRenderContext gl);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LightProgram_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LightProgram",6e,94,3d,1c); }

		int _programViewUniform;
		int _programProjectionUniform;
		int _programModelUniform;
		int _programVertexAttribute;
		void getShaderVarLocations();
		::Dynamic getShaderVarLocations_dyn();

		void render( ::Dynamic params);
		::Dynamic render_dyn();

};


#endif /* INCLUDED_LightProgram */ 
