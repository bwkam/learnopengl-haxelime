// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_input2action__InputState_KeyState
#define INCLUDED_input2action__InputState_KeyState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(input2action,_InputState,KeyCombo)
HX_DECLARE_CLASS2(input2action,_InputState,KeyState)

namespace input2action{
namespace _InputState{


class HXCPP_CLASS_ATTRIBUTES KeyState_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef KeyState_obj OBJ_;
		KeyState_obj();

	public:
		enum { _hx_ClassId = 0x75ed84da };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="input2action._InputState.KeyState")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"input2action._InputState.KeyState"); }
		static ::hx::ObjectPtr< KeyState_obj > __new();
		static ::hx::ObjectPtr< KeyState_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~KeyState_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("KeyState",12,d8,26,a2); }

		::Array< ::Dynamic> keyCombo;
};

} // end namespace input2action
} // end namespace _InputState

#endif /* INCLUDED_input2action__InputState_KeyState */ 
