// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_input2action__InputState_InputState_Impl_
#define INCLUDED_input2action__InputState_InputState_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(input2action,_InputState,InputState_Impl_)
HX_DECLARE_CLASS2(input2action,_InputState,KeyState)

namespace input2action{
namespace _InputState{


class HXCPP_CLASS_ATTRIBUTES InputState_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef InputState_Impl__obj OBJ_;
		InputState_Impl__obj();

	public:
		enum { _hx_ClassId = 0x2803426f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="input2action._InputState.InputState_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"input2action._InputState.InputState_Impl_"); }

		inline static ::hx::ObjectPtr< InputState_Impl__obj > __new() {
			::hx::ObjectPtr< InputState_Impl__obj > __this = new InputState_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< InputState_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			InputState_Impl__obj *__this = (InputState_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(InputState_Impl__obj), false, "input2action._InputState.InputState_Impl_"));
			*(void **)__this = InputState_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~InputState_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("InputState_Impl_",a7,8d,16,1f); }

		static ::String keyCodeName(::Array< ::Dynamic> this1,int key);
		static ::Dynamic keyCodeName_dyn();

};

} // end namespace input2action
} // end namespace _InputState

#endif /* INCLUDED_input2action__InputState_InputState_Impl_ */ 
