// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_input2action_ActionConfigItem
#define INCLUDED_input2action_ActionConfigItem

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_3af4650c0c43d3c8_27_new)
HX_DECLARE_CLASS1(input2action,ActionConfigItem)

namespace input2action{


class HXCPP_CLASS_ATTRIBUTES ActionConfigItem_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ActionConfigItem_obj OBJ_;
		ActionConfigItem_obj();

	public:
		enum { _hx_ClassId = 0x4a14506d };

		void __construct(::String action, ::Dynamic single,::Array< ::Dynamic> keyboard,::Array< ::Dynamic> gamepad,::Array< ::Dynamic> joystick);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="input2action.ActionConfigItem")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"input2action.ActionConfigItem"); }

		inline static ::hx::ObjectPtr< ActionConfigItem_obj > __new(::String action, ::Dynamic single,::Array< ::Dynamic> keyboard,::Array< ::Dynamic> gamepad,::Array< ::Dynamic> joystick) {
			::hx::ObjectPtr< ActionConfigItem_obj > __this = new ActionConfigItem_obj();
			__this->__construct(action,single,keyboard,gamepad,joystick);
			return __this;
		}

		inline static ::hx::ObjectPtr< ActionConfigItem_obj > __alloc(::hx::Ctx *_hx_ctx,::String action, ::Dynamic single,::Array< ::Dynamic> keyboard,::Array< ::Dynamic> gamepad,::Array< ::Dynamic> joystick) {
			ActionConfigItem_obj *__this = (ActionConfigItem_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ActionConfigItem_obj), true, "input2action.ActionConfigItem"));
			*(void **)__this = ActionConfigItem_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_3af4650c0c43d3c8_27_new)
HXLINE(  34)		( ( ::input2action::ActionConfigItem)(__this) )->joystick = null();
HXLINE(  33)		( ( ::input2action::ActionConfigItem)(__this) )->gamepad = null();
HXLINE(  32)		( ( ::input2action::ActionConfigItem)(__this) )->keyboard = null();
HXLINE(  30)		( ( ::input2action::ActionConfigItem)(__this) )->single = false;
HXLINE(  27)		( ( ::input2action::ActionConfigItem)(__this) )->action = action;
HXDLIN(  27)		if (::hx::IsNotNull( single )) {
HXDLIN(  27)			( ( ::input2action::ActionConfigItem)(__this) )->single = ( (bool)(single) );
            		}
HXDLIN(  27)		if (::hx::IsNotNull( keyboard )) {
HXDLIN(  27)			( ( ::input2action::ActionConfigItem)(__this) )->keyboard = keyboard;
            		}
HXDLIN(  27)		if (::hx::IsNotNull( gamepad )) {
HXDLIN(  27)			( ( ::input2action::ActionConfigItem)(__this) )->gamepad = gamepad;
            		}
HXDLIN(  27)		if (::hx::IsNotNull( joystick )) {
HXDLIN(  27)			( ( ::input2action::ActionConfigItem)(__this) )->joystick = joystick;
            		}
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ActionConfigItem_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ActionConfigItem",6b,ec,54,4e); }

		::String action;
		bool single;
		::Array< ::Dynamic> keyboard;
		::Array< ::Dynamic> gamepad;
		::Array< ::Dynamic> joystick;
};

} // end namespace input2action

#endif /* INCLUDED_input2action_ActionConfigItem */ 
