// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_view_utils_TexUtils
#define INCLUDED_peote_view_utils_TexUtils

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(lime,_internal,backend,native,NativeOpenGLRenderContext)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLObject)
HX_DECLARE_CLASS3(peote,view,utils,TexUtils)

namespace peote{
namespace view{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES TexUtils_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TexUtils_obj OBJ_;
		TexUtils_obj();

	public:
		enum { _hx_ClassId = 0x393f44eb };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="peote.view.utils.TexUtils")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"peote.view.utils.TexUtils"); }

		inline static ::hx::ObjectPtr< TexUtils_obj > __new() {
			::hx::ObjectPtr< TexUtils_obj > __this = new TexUtils_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< TexUtils_obj > __alloc(::hx::Ctx *_hx_ctx) {
			TexUtils_obj *__this = (TexUtils_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TexUtils_obj), false, "peote.view.utils.TexUtils"));
			*(void **)__this = TexUtils_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TexUtils_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TexUtils",ea,b2,64,65); }

		static  ::lime::graphics::opengl::GLObject createEmptyTexture( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl,int width,int height,::hx::Null< int >  colorChannels,::hx::Null< bool >  createMipmaps,::hx::Null< int >  magFilter,::hx::Null< int >  minFilter,::hx::Null< bool >  useFloat);
		static ::Dynamic createEmptyTexture_dyn();

		static  ::lime::graphics::opengl::GLObject createPickingTexture( ::lime::_internal::backend::native::NativeOpenGLRenderContext gl,::hx::Null< bool >  isRGBA32I);
		static ::Dynamic createPickingTexture_dyn();

		static  ::Dynamic optimalTextureSize(int imageSlots,int slotWidth,int slotHeight,int maxTextureSize,::hx::Null< bool >  errorIfNotFit,::hx::Null< bool >  debug);
		static ::Dynamic optimalTextureSize_dyn();

};

} // end namespace peote
} // end namespace view
} // end namespace utils

#endif /* INCLUDED_peote_view_utils_TexUtils */ 
