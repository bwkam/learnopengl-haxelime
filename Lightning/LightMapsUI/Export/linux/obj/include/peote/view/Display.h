// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_view_Display
#define INCLUDED_peote_view_Display

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(lime,_internal,backend,native,NativeOpenGLRenderContext)
HX_DECLARE_CLASS2(peote,view,Display)
HX_DECLARE_CLASS2(peote,view,PeoteView)
HX_DECLARE_CLASS2(peote,view,Program)
HX_DECLARE_CLASS2(peote,view,Texture)
HX_DECLARE_CLASS3(peote,view,utils,RenderListItem_peote_view_Program)
HX_DECLARE_CLASS3(peote,view,utils,RenderList_peote_view_Program)

namespace peote{
namespace view{


class HXCPP_CLASS_ATTRIBUTES Display_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Display_obj OBJ_;
		Display_obj();

	public:
		enum { _hx_ClassId = 0x0fddc6ba };

		void __construct(int x,int y,int width,int height,::hx::Null< int >  __o_color);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="peote.view.Display")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"peote.view.Display"); }
		static ::hx::ObjectPtr< Display_obj > __new(int x,int y,int width,int height,::hx::Null< int >  __o_color);
		static ::hx::ObjectPtr< Display_obj > __alloc(::hx::Ctx *_hx_ctx,int x,int y,int width,int height,::hx::Null< int >  __o_color);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Display_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Display",22,52,9b,88); }

		int width;
		int height;
		int x;
		int y;
		Float xOffset;
		Float yOffset;
		Float xz;
		Float yz;
		bool isVisible;
		bool backgroundAlpha;
		bool backgroundDepth;
		bool backgroundEnabled;
		Float red;
		Float green;
		Float blue;
		Float alpha;
		 ::peote::view::PeoteView peoteView;
		 ::lime::_internal::backend::native::NativeOpenGLRenderContext gl;
		 ::peote::view::utils::RenderList_peote_view_Program programList;
		 ::peote::view::Texture fbTexture;
		virtual void addToPeoteView( ::peote::view::PeoteView peoteView, ::peote::view::Display atDisplay,::hx::Null< bool >  addBefore);
		::Dynamic addToPeoteView_dyn();

		void setNewGLContext( ::lime::_internal::backend::native::NativeOpenGLRenderContext newGl);
		::Dynamic setNewGLContext_dyn();

		void addProgram( ::peote::view::Program program, ::peote::view::Program atProgram,::hx::Null< bool >  addBefore);
		::Dynamic addProgram_dyn();

		int framebufferTextureSlot;
		bool _renderFramebufferEnabled;
		int renderFramebufferSkipFrames;
		int renderFramebufferFrame;
		 ::peote::view::utils::RenderListItem_peote_view_Program programListItem;
};

} // end namespace peote
} // end namespace view

#endif /* INCLUDED_peote_view_Display */ 
