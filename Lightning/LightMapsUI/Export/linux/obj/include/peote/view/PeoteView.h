// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_view_PeoteView
#define INCLUDED_peote_view_PeoteView

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,ArrayBufferViewImpl)
HX_DECLARE_CLASS4(lime,_internal,backend,native,NativeOpenGLRenderContext)
HX_DECLARE_CLASS2(lime,graphics,RenderContext)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLObject)
HX_DECLARE_CLASS2(lime,ui,Window)
HX_DECLARE_CLASS2(peote,view,Display)
HX_DECLARE_CLASS2(peote,view,PeoteView)
HX_DECLARE_CLASS2(peote,view,Program)
HX_DECLARE_CLASS2(peote,view,Texture)
HX_DECLARE_CLASS3(peote,view,utils,Background)
HX_DECLARE_CLASS3(peote,view,utils,RenderListItem_peote_view_Display)
HX_DECLARE_CLASS3(peote,view,utils,RenderList_peote_view_Display)

namespace peote{
namespace view{


class HXCPP_CLASS_ATTRIBUTES PeoteView_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef PeoteView_obj OBJ_;
		PeoteView_obj();

	public:
		enum { _hx_ClassId = 0x7394e2e4 };

		void __construct( ::lime::ui::Window window,::hx::Null< int >  __o_color,::hx::Null< bool >  __o_registerEvents);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="peote.view.PeoteView")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"peote.view.PeoteView"); }
		static ::hx::ObjectPtr< PeoteView_obj > __new( ::lime::ui::Window window,::hx::Null< int >  __o_color,::hx::Null< bool >  __o_registerEvents);
		static ::hx::ObjectPtr< PeoteView_obj > __alloc(::hx::Ctx *_hx_ctx, ::lime::ui::Window window,::hx::Null< int >  __o_color,::hx::Null< bool >  __o_registerEvents);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PeoteView_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PeoteView",b0,24,2d,46); }

		 ::lime::ui::Window window;
		 ::lime::_internal::backend::native::NativeOpenGLRenderContext gl;
		int width;
		int height;
		Float red;
		Float green;
		Float blue;
		Float alpha;
		bool colorState;
		bool glStateAlpha;
		bool glStateDepth;
		int maskState;
		int maxTextureImageUnits;
		::Array< ::Dynamic> glStateTexture;
		bool isTextureStateChange(int activeTextureUnit, ::peote::view::Texture texture);
		::Dynamic isTextureStateChange_dyn();

		Float xz;
		Float yz;
		Float xOffset;
		Float yOffset;
		 ::peote::view::utils::RenderList_peote_view_Display displayList;
		 ::peote::view::utils::RenderList_peote_view_Display framebufferDisplayList;
		 ::peote::view::utils::Background background;
		bool isRun;
		Float startTime;
		Float stopTime;
		Float speed;
		void addDisplay( ::peote::view::Display display, ::peote::view::Display atDisplay,::hx::Null< bool >  addBefore);
		::Dynamic addDisplay_dyn();

		 ::Dynamic onResize;
		Dynamic onResize_dyn() { return onResize;}
		void resize(int width,int height);
		::Dynamic resize_dyn();

		 ::lime::graphics::opengl::GLObject pickFB;
		 ::lime::graphics::opengl::GLObject pickTexture;
		 ::lime::graphics::opengl::GLObject pickDepthBuffer;
		 ::haxe::io::ArrayBufferViewImpl pickUInt8;
		int getElementAt(Float posX,Float posY, ::peote::view::Display display, ::peote::view::Program program);
		::Dynamic getElementAt_dyn();

		int pick(Float posX,Float posY, ::peote::view::Display display, ::peote::view::Program program,int toElement);
		::Dynamic pick_dyn();

		 ::peote::view::utils::RenderListItem_peote_view_Display displayListItem;
		void render( ::lime::graphics::RenderContext context);
		::Dynamic render_dyn();

};

} // end namespace peote
} // end namespace view

#endif /* INCLUDED_peote_view_PeoteView */ 
