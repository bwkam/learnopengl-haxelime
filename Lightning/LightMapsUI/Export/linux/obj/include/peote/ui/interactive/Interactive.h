// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_ui_interactive_Interactive
#define INCLUDED_peote_ui_interactive_Interactive

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(peote,ui,PeoteUIDisplay)
HX_DECLARE_CLASS3(peote,ui,interactive,Interactive)
HX_DECLARE_CLASS3(peote,ui,interactive,Pickable)
HX_DECLARE_CLASS2(peote,view,Display)

namespace peote{
namespace ui{
namespace interactive{


class HXCPP_CLASS_ATTRIBUTES Interactive_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Interactive_obj OBJ_;
		Interactive_obj();

	public:
		enum { _hx_ClassId = 0x314a7f1b };

		void __construct(int xPosition,int yPosition,int width,int height,int zIndex);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="peote.ui.interactive.Interactive")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"peote.ui.interactive.Interactive"); }
		static ::hx::ObjectPtr< Interactive_obj > __new(int xPosition,int yPosition,int width,int height,int zIndex);
		static ::hx::ObjectPtr< Interactive_obj > __alloc(::hx::Ctx *_hx_ctx,int xPosition,int yPosition,int width,int height,int zIndex);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Interactive_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Interactive",c2,d5,8b,20); }

		static void noOperation( ::Dynamic e);
		static ::Dynamic noOperation_dyn();

		static void noWheelOperation( ::Dynamic e);
		static ::Dynamic noWheelOperation_dyn();

		 ::peote::ui::PeoteUIDisplay uiDisplay;
		bool isVisible;
		 ::peote::ui::interactive::Pickable pickableMove;
		 ::peote::ui::interactive::Pickable pickableClick;
		bool overOutEventsBubbleToDisplay;
		 ::peote::ui::interactive::Interactive overOutEventsBubbleTo;
		bool intoOverOutEventBubbleOf( ::peote::ui::interactive::Interactive e);
		::Dynamic intoOverOutEventBubbleOf_dyn();

		bool moveEventsBubbleToDisplay;
		 ::peote::ui::interactive::Interactive moveEventsBubbleTo;
		bool upDownEventsBubbleToDisplay;
		 ::peote::ui::interactive::Interactive upDownEventsBubbleTo;
		bool intoUpDownEventBubbleOf( ::peote::ui::interactive::Interactive e);
		::Dynamic intoUpDownEventBubbleOf_dyn();

		 ::peote::ui::interactive::Interactive wheelEventsBubbleTo;
		int x;
		int y;
		int z;
		 ::Dynamic changeZIndex;
		Dynamic changeZIndex_dyn() { return changeZIndex;}
		int width;
		int height;
		bool masked;
		int maskX;
		int maskY;
		int maskWidth;
		int maskHeight;
		 ::Dynamic pointerOver;
		Dynamic pointerOver_dyn() { return pointerOver;}
		 ::Dynamic pointerOut;
		Dynamic pointerOut_dyn() { return pointerOut;}
		 ::Dynamic pointerMove;
		Dynamic pointerMove_dyn() { return pointerMove;}
		 ::Dynamic mouseWheel;
		Dynamic mouseWheel_dyn() { return mouseWheel;}
		int hasMoveEvent;
		 ::Dynamic pointerUp;
		Dynamic pointerUp_dyn() { return pointerUp;}
		 ::Dynamic pointerDown;
		Dynamic pointerDown_dyn() { return pointerDown;}
		 ::Dynamic pointerClick;
		Dynamic pointerClick_dyn() { return pointerClick;}
		int hasClickEvent;
		 ::Dynamic drag;
		Dynamic drag_dyn() { return drag;}
		 ::Dynamic resizeWidth;
		Dynamic resizeWidth_dyn() { return resizeWidth;}
		 ::Dynamic resizeHeight;
		Dynamic resizeHeight_dyn() { return resizeHeight;}
		void updateLayout();
		::Dynamic updateLayout_dyn();

		void update();
		::Dynamic update_dyn();

		virtual void updateVisibleLayout();
		::Dynamic updateVisibleLayout_dyn();

		virtual void updateVisible();
		::Dynamic updateVisible_dyn();

		virtual void onAddVisibleToDisplay();
		::Dynamic onAddVisibleToDisplay_dyn();

		virtual void onRemoveVisibleFromDisplay();
		::Dynamic onRemoveVisibleFromDisplay_dyn();

		int dragMinX;
		int dragMinY;
		int dragMaxX;
		int dragMaxY;
		bool isDragging;
		int dragOriginX;
		int dragOriginY;
		void startDragging( ::Dynamic e);
		::Dynamic startDragging_dyn();

		void stopDragging( ::Dynamic e);
		::Dynamic stopDragging_dyn();

		void addPickableMove();
		::Dynamic addPickableMove_dyn();

		void removePickableMove();
		::Dynamic removePickableMove_dyn();

		void addPickableClick();
		::Dynamic addPickableClick_dyn();

		void removePickableClick();
		::Dynamic removePickableClick_dyn();

};

} // end namespace peote
} // end namespace ui
} // end namespace interactive

#endif /* INCLUDED_peote_ui_interactive_Interactive */ 
