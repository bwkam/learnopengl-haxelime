// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_ui_config__SliderConfig_SliderConfigImpl
#define INCLUDED_peote_ui_config__SliderConfig_SliderConfigImpl

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(peote,ui,config,Space)
HX_DECLARE_CLASS4(peote,ui,config,_SliderConfig,SliderConfigImpl)
HX_DECLARE_CLASS4(peote,ui,style,interfaces,Style)
HX_DECLARE_CLASS4(peote,ui,style,interfaces,StyleID)

namespace peote{
namespace ui{
namespace config{
namespace _SliderConfig{


class HXCPP_CLASS_ATTRIBUTES SliderConfigImpl_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SliderConfigImpl_obj OBJ_;
		SliderConfigImpl_obj();

	public:
		enum { _hx_ClassId = 0x12cf1764 };

		void __construct(::Dynamic backgroundStyle,::Dynamic draggerStyle, ::Dynamic vertical, ::Dynamic reverse, ::peote::ui::config::Space draggerSpace, ::peote::ui::config::Space backgroundSpace, ::Dynamic draggerSize, ::Dynamic draggerSizePercent, ::Dynamic draggerOffset, ::Dynamic draggerOffsetPercent, ::Dynamic backgroundSize, ::Dynamic backgroundSizePercent, ::Dynamic backgroundOffset, ::Dynamic backgroundOffsetPercent, ::Dynamic draggerLength, ::Dynamic draggerLengthPercent, ::Dynamic backgroundLength, ::Dynamic backgroundLengthPercent, ::Dynamic draggSpace, ::Dynamic draggSpaceStart, ::Dynamic draggSpaceEnd);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="peote.ui.config._SliderConfig.SliderConfigImpl")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"peote.ui.config._SliderConfig.SliderConfigImpl"); }
		static ::hx::ObjectPtr< SliderConfigImpl_obj > __new(::Dynamic backgroundStyle,::Dynamic draggerStyle, ::Dynamic vertical, ::Dynamic reverse, ::peote::ui::config::Space draggerSpace, ::peote::ui::config::Space backgroundSpace, ::Dynamic draggerSize, ::Dynamic draggerSizePercent, ::Dynamic draggerOffset, ::Dynamic draggerOffsetPercent, ::Dynamic backgroundSize, ::Dynamic backgroundSizePercent, ::Dynamic backgroundOffset, ::Dynamic backgroundOffsetPercent, ::Dynamic draggerLength, ::Dynamic draggerLengthPercent, ::Dynamic backgroundLength, ::Dynamic backgroundLengthPercent, ::Dynamic draggSpace, ::Dynamic draggSpaceStart, ::Dynamic draggSpaceEnd);
		static ::hx::ObjectPtr< SliderConfigImpl_obj > __alloc(::hx::Ctx *_hx_ctx,::Dynamic backgroundStyle,::Dynamic draggerStyle, ::Dynamic vertical, ::Dynamic reverse, ::peote::ui::config::Space draggerSpace, ::peote::ui::config::Space backgroundSpace, ::Dynamic draggerSize, ::Dynamic draggerSizePercent, ::Dynamic draggerOffset, ::Dynamic draggerOffsetPercent, ::Dynamic backgroundSize, ::Dynamic backgroundSizePercent, ::Dynamic backgroundOffset, ::Dynamic backgroundOffsetPercent, ::Dynamic draggerLength, ::Dynamic draggerLengthPercent, ::Dynamic backgroundLength, ::Dynamic backgroundLengthPercent, ::Dynamic draggSpace, ::Dynamic draggSpaceStart, ::Dynamic draggSpaceEnd);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SliderConfigImpl_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SliderConfigImpl",63,84,55,44); }

		::Dynamic backgroundStyle;
		::Dynamic draggerStyle;
		 ::Dynamic vertical;
		bool reverse;
		 ::peote::ui::config::Space draggerSpace;
		 ::peote::ui::config::Space backgroundSpace;
		 ::Dynamic draggerSize;
		 ::Dynamic draggerSizePercent;
		 ::Dynamic draggerOffset;
		 ::Dynamic draggerOffsetPercent;
		 ::Dynamic backgroundSize;
		 ::Dynamic backgroundSizePercent;
		 ::Dynamic backgroundOffset;
		 ::Dynamic backgroundOffsetPercent;
		 ::Dynamic draggerLength;
		 ::Dynamic draggerLengthPercent;
		 ::Dynamic backgroundLength;
		 ::Dynamic backgroundLengthPercent;
		 ::Dynamic draggSpace;
		 ::Dynamic draggSpaceStart;
		 ::Dynamic draggSpaceEnd;
};

} // end namespace peote
} // end namespace ui
} // end namespace config
} // end namespace _SliderConfig

#endif /* INCLUDED_peote_ui_config__SliderConfig_SliderConfigImpl */ 
