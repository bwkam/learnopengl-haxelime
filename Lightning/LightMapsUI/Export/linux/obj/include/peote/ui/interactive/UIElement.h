// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_ui_interactive_UIElement
#define INCLUDED_peote_ui_interactive_UIElement

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_peote_ui_interactive_Interactive
#include <peote/ui/interactive/Interactive.h>
#endif
HX_DECLARE_CLASS3(peote,ui,config,Space)
HX_DECLARE_CLASS4(peote,ui,config,_ElementConfig,ElementConfigImpl)
HX_DECLARE_CLASS3(peote,ui,interactive,Interactive)
HX_DECLARE_CLASS3(peote,ui,interactive,UIElement)
HX_DECLARE_CLASS4(peote,ui,style,interfaces,StyleElement)
HX_DECLARE_CLASS4(peote,ui,style,interfaces,StyleProgram)

namespace peote{
namespace ui{
namespace interactive{


class HXCPP_CLASS_ATTRIBUTES UIElement_obj : public  ::peote::ui::interactive::Interactive_obj
{
	public:
		typedef  ::peote::ui::interactive::Interactive_obj super;
		typedef UIElement_obj OBJ_;
		UIElement_obj();

	public:
		enum { _hx_ClassId = 0x26e669c5 };

		void __construct(int xPosition,int yPosition,int width,int height,::hx::Null< int >  __o_zIndex, ::peote::ui::config::_ElementConfig::ElementConfigImpl config);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="peote.ui.interactive.UIElement")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"peote.ui.interactive.UIElement"); }
		static ::hx::ObjectPtr< UIElement_obj > __new(int xPosition,int yPosition,int width,int height,::hx::Null< int >  __o_zIndex, ::peote::ui::config::_ElementConfig::ElementConfigImpl config);
		static ::hx::ObjectPtr< UIElement_obj > __alloc(::hx::Ctx *_hx_ctx,int xPosition,int yPosition,int width,int height,::hx::Null< int >  __o_zIndex, ::peote::ui::config::_ElementConfig::ElementConfigImpl config);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~UIElement_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("UIElement",c8,3e,30,2d); }

		::Dynamic styleProgram;
		::Dynamic styleElement;
		 ::Dynamic style;
		bool styleIsVisible;
		 ::peote::ui::config::Space backgroundSpace;
		void updateVisibleLayout();

		void updateUIElementLayout();
		::Dynamic updateUIElementLayout_dyn();

		void updateVisible();

		void updateUIElement();
		::Dynamic updateUIElement_dyn();

		void onAddVisibleToDisplay();

		void onAddUIElementToDisplay();
		::Dynamic onAddUIElementToDisplay_dyn();

		void onRemoveVisibleFromDisplay();

		void onRemoveUIElementFromDisplay();
		::Dynamic onRemoveUIElementFromDisplay_dyn();

};

} // end namespace peote
} // end namespace ui
} // end namespace interactive

#endif /* INCLUDED_peote_ui_interactive_UIElement */ 
