// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_ui_interactive_interfaces_ActionTextPage
#define INCLUDED_peote_ui_interactive_interfaces_ActionTextPage

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(peote,ui,interactive,interfaces,ActionTextPage)

namespace peote{
namespace ui{
namespace interactive{
namespace interfaces{


class HXCPP_CLASS_ATTRIBUTES ActionTextPage_obj {
	public:
		typedef ::hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (::hx::Object :: *_hx_deleteChar)(); 
		static inline void deleteChar( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_deleteChar)();
		}
		void (::hx::Object :: *_hx_backspace)(); 
		static inline void backspace( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_backspace)();
		}
		void (::hx::Object :: *_hx_delLeft)(::hx::Null< bool >  toLineStart); 
		static inline void delLeft( ::Dynamic _hx_,::hx::Null< bool >  toLineStart) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_delLeft)(toLineStart);
		}
		void (::hx::Object :: *_hx_delRight)(::hx::Null< bool >  toLineEnd); 
		static inline void delRight( ::Dynamic _hx_,::hx::Null< bool >  toLineEnd) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_delRight)(toLineEnd);
		}
		void (::hx::Object :: *_hx_tabulator)(); 
		static inline void tabulator( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_tabulator)();
		}
		void (::hx::Object :: *_hx_copyToClipboard)(); 
		static inline void copyToClipboard( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_copyToClipboard)();
		}
		void (::hx::Object :: *_hx_cutToClipboard)(); 
		static inline void cutToClipboard( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cutToClipboard)();
		}
		void (::hx::Object :: *_hx_pasteFromClipboard)(); 
		static inline void pasteFromClipboard( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_pasteFromClipboard)();
		}
		void (::hx::Object :: *_hx_selectAll)(); 
		static inline void selectAll( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_selectAll)();
		}
		void (::hx::Object :: *_hx_undo)(); 
		static inline void undo( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_undo)();
		}
		void (::hx::Object :: *_hx_redo)(); 
		static inline void redo( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_redo)();
		}
		void (::hx::Object :: *_hx_cursorLeft)(::hx::Null< bool >  addSelection); 
		static inline void cursorLeft( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorLeft)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorRight)(::hx::Null< bool >  addSelection); 
		static inline void cursorRight( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorRight)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorLeftWord)(::hx::Null< bool >  addSelection); 
		static inline void cursorLeftWord( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorLeftWord)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorRightWord)(::hx::Null< bool >  addSelection); 
		static inline void cursorRightWord( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorRightWord)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorStart)(::hx::Null< bool >  addSelection); 
		static inline void cursorStart( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorStart)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorEnd)(::hx::Null< bool >  addSelection); 
		static inline void cursorEnd( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorEnd)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorPageStart)(::hx::Null< bool >  addSelection); 
		static inline void cursorPageStart( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorPageStart)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorPageEnd)(::hx::Null< bool >  addSelection); 
		static inline void cursorPageEnd( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorPageEnd)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorUp)(::hx::Null< bool >  addSelection); 
		static inline void cursorUp( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorUp)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorDown)(::hx::Null< bool >  addSelection); 
		static inline void cursorDown( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorDown)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorPageUp)(::hx::Null< bool >  addSelection); 
		static inline void cursorPageUp( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorPageUp)(addSelection);
		}
		void (::hx::Object :: *_hx_cursorPageDown)(::hx::Null< bool >  addSelection); 
		static inline void cursorPageDown( ::Dynamic _hx_,::hx::Null< bool >  addSelection) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_cursorPageDown)(addSelection);
		}
		void (::hx::Object :: *_hx_enter)(); 
		static inline void enter( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::peote::ui::interactive::interfaces::ActionTextPage_obj *>(_hx_.mPtr->_hx_getInterface(0x49ee4c8f)))->_hx_enter)();
		}
};

} // end namespace peote
} // end namespace ui
} // end namespace interactive
} // end namespace interfaces

#endif /* INCLUDED_peote_ui_interactive_interfaces_ActionTextPage */ 
