// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#ifndef INCLUDED_peote_ui_config_Space
#define INCLUDED_peote_ui_config_Space

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_35a27cc93abc09bd_13_new)
HX_DECLARE_CLASS3(peote,ui,config,Space)

namespace peote{
namespace ui{
namespace config{


class HXCPP_CLASS_ATTRIBUTES Space_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Space_obj OBJ_;
		Space_obj();

	public:
		enum { _hx_ClassId = 0x0d23b2e5 };

		void __construct(::hx::Null< int >  __o_left,::hx::Null< int >  __o_top,::hx::Null< int >  __o_right,::hx::Null< int >  __o_bottom);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="peote.ui.config.Space")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"peote.ui.config.Space"); }

		inline static ::hx::ObjectPtr< Space_obj > __new(::hx::Null< int >  __o_left,::hx::Null< int >  __o_top,::hx::Null< int >  __o_right,::hx::Null< int >  __o_bottom) {
			::hx::ObjectPtr< Space_obj > __this = new Space_obj();
			__this->__construct(__o_left,__o_top,__o_right,__o_bottom);
			return __this;
		}

		inline static ::hx::ObjectPtr< Space_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< int >  __o_left,::hx::Null< int >  __o_top,::hx::Null< int >  __o_right,::hx::Null< int >  __o_bottom) {
			Space_obj *__this = (Space_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Space_obj), false, "peote.ui.config.Space"));
			*(void **)__this = Space_obj::_hx_vtable;
{
            		int left = __o_left.Default(0);
            		int top = __o_top.Default(0);
            		int right = __o_right.Default(0);
            		int bottom = __o_bottom.Default(0);
            	HX_STACKFRAME(&_hx_pos_35a27cc93abc09bd_13_new)
HXLINE(  14)		( ( ::peote::ui::config::Space)(__this) )->left = left;
HXLINE(  15)		( ( ::peote::ui::config::Space)(__this) )->top = top;
HXLINE(  16)		( ( ::peote::ui::config::Space)(__this) )->right = right;
HXLINE(  17)		( ( ::peote::ui::config::Space)(__this) )->bottom = bottom;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Space_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Space",a6,fc,93,14); }

		int left;
		int top;
		int right;
		int bottom;
};

} // end namespace peote
} // end namespace ui
} // end namespace config

#endif /* INCLUDED_peote_ui_config_Space */ 
