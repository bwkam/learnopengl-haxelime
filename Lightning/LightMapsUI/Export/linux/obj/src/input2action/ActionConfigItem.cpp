// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#include <hxcpp.h>

#ifndef INCLUDED_input2action_ActionConfigItem
#include <input2action/ActionConfigItem.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3af4650c0c43d3c8_27_new,"input2action.ActionConfigItem","new",0x8d4992ad,"input2action.ActionConfigItem.new","input2action/ActionConfig.hx",27,0xb6525dd5)
namespace input2action{

void ActionConfigItem_obj::__construct(::String action, ::Dynamic single,::Array< ::Dynamic> keyboard,::Array< ::Dynamic> gamepad,::Array< ::Dynamic> joystick){
            	HX_STACKFRAME(&_hx_pos_3af4650c0c43d3c8_27_new)
HXLINE(  34)		this->joystick = null();
HXLINE(  33)		this->gamepad = null();
HXLINE(  32)		this->keyboard = null();
HXLINE(  30)		this->single = false;
HXLINE(  27)		this->action = action;
HXDLIN(  27)		if (::hx::IsNotNull( single )) {
HXDLIN(  27)			this->single = ( (bool)(single) );
            		}
HXDLIN(  27)		if (::hx::IsNotNull( keyboard )) {
HXDLIN(  27)			this->keyboard = keyboard;
            		}
HXDLIN(  27)		if (::hx::IsNotNull( gamepad )) {
HXDLIN(  27)			this->gamepad = gamepad;
            		}
HXDLIN(  27)		if (::hx::IsNotNull( joystick )) {
HXDLIN(  27)			this->joystick = joystick;
            		}
            	}

Dynamic ActionConfigItem_obj::__CreateEmpty() { return new ActionConfigItem_obj; }

void *ActionConfigItem_obj::_hx_vtable = 0;

Dynamic ActionConfigItem_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ActionConfigItem_obj > _hx_result = new ActionConfigItem_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool ActionConfigItem_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4a14506d;
}


ActionConfigItem_obj::ActionConfigItem_obj()
{
}

void ActionConfigItem_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ActionConfigItem);
	HX_MARK_MEMBER_NAME(action,"action");
	HX_MARK_MEMBER_NAME(single,"single");
	HX_MARK_MEMBER_NAME(keyboard,"keyboard");
	HX_MARK_MEMBER_NAME(gamepad,"gamepad");
	HX_MARK_MEMBER_NAME(joystick,"joystick");
	HX_MARK_END_CLASS();
}

void ActionConfigItem_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(action,"action");
	HX_VISIT_MEMBER_NAME(single,"single");
	HX_VISIT_MEMBER_NAME(keyboard,"keyboard");
	HX_VISIT_MEMBER_NAME(gamepad,"gamepad");
	HX_VISIT_MEMBER_NAME(joystick,"joystick");
}

::hx::Val ActionConfigItem_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"action") ) { return ::hx::Val( action ); }
		if (HX_FIELD_EQ(inName,"single") ) { return ::hx::Val( single ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"gamepad") ) { return ::hx::Val( gamepad ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"keyboard") ) { return ::hx::Val( keyboard ); }
		if (HX_FIELD_EQ(inName,"joystick") ) { return ::hx::Val( joystick ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ActionConfigItem_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"action") ) { action=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"single") ) { single=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"gamepad") ) { gamepad=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"keyboard") ) { keyboard=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"joystick") ) { joystick=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ActionConfigItem_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("action",b6,3b,46,16));
	outFields->push(HX_("single",88,66,21,b9));
	outFields->push(HX_("keyboard",a7,bc,29,68));
	outFields->push(HX_("gamepad",a1,e0,85,89));
	outFields->push(HX_("joystick",bc,e0,f1,9b));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ActionConfigItem_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(ActionConfigItem_obj,action),HX_("action",b6,3b,46,16)},
	{::hx::fsBool,(int)offsetof(ActionConfigItem_obj,single),HX_("single",88,66,21,b9)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ActionConfigItem_obj,keyboard),HX_("keyboard",a7,bc,29,68)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ActionConfigItem_obj,gamepad),HX_("gamepad",a1,e0,85,89)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ActionConfigItem_obj,joystick),HX_("joystick",bc,e0,f1,9b)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ActionConfigItem_obj_sStaticStorageInfo = 0;
#endif

static ::String ActionConfigItem_obj_sMemberFields[] = {
	HX_("action",b6,3b,46,16),
	HX_("single",88,66,21,b9),
	HX_("keyboard",a7,bc,29,68),
	HX_("gamepad",a1,e0,85,89),
	HX_("joystick",bc,e0,f1,9b),
	::String(null()) };

::hx::Class ActionConfigItem_obj::__mClass;

void ActionConfigItem_obj::__register()
{
	ActionConfigItem_obj _hx_dummy;
	ActionConfigItem_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("input2action.ActionConfigItem",3b,b8,ad,60);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ActionConfigItem_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ActionConfigItem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ActionConfigItem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ActionConfigItem_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace input2action
