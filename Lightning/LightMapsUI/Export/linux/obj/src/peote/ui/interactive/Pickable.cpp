// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_peote_ui_interactive_Interactive
#include <peote/ui/interactive/Interactive.h>
#endif
#ifndef INCLUDED_peote_ui_interactive_Pickable
#include <peote/ui/interactive/Pickable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0d2151e069c810ec_11_new,"peote.ui.interactive.Pickable","new",0x5610b2d0,"peote.ui.interactive.Pickable.new","peote/ui/interactive/Interactive.hx",11,0x2212f8a0)
HX_LOCAL_STACK_FRAME(_hx_pos_0d2151e069c810ec_11_boot,"peote.ui.interactive.Pickable","boot",0xf0a4c3c2,"peote.ui.interactive.Pickable.boot","peote/ui/interactive/Interactive.hx",11,0x2212f8a0)
HX_LOCAL_STACK_FRAME(_hx_pos_0c0546c56125985e_920_boot,"peote.ui.interactive.Pickable","boot",0xf0a4c3c2,"peote.ui.interactive.Pickable.boot","peote/view/Element.hx",920,0x41e9abc8)
HX_LOCAL_STACK_FRAME(_hx_pos_0c0546c56125985e_1142_boot,"peote.ui.interactive.Pickable","boot",0xf0a4c3c2,"peote.ui.interactive.Pickable.boot","peote/view/Element.hx",1142,0x41e9abc8)
HX_LOCAL_STACK_FRAME(_hx_pos_0c0546c56125985e_1151_boot,"peote.ui.interactive.Pickable","boot",0xf0a4c3c2,"peote.ui.interactive.Pickable.boot","peote/view/Element.hx",1151,0x41e9abc8)
HX_LOCAL_STACK_FRAME(_hx_pos_0c0546c56125985e_1396_boot,"peote.ui.interactive.Pickable","boot",0xf0a4c3c2,"peote.ui.interactive.Pickable.boot","peote/view/Element.hx",1396,0x41e9abc8)
namespace peote{
namespace ui{
namespace interactive{

void Pickable_obj::__construct( ::peote::ui::interactive::Interactive uiElement){
            	HX_STACKFRAME(&_hx_pos_0d2151e069c810ec_11_new)
HXLINE(1647)		this->bytePos = -1;
HXLINE(  19)		this->z = 0;
HXLINE(  18)		this->h = 100;
HXLINE(  17)		this->w = 100;
HXLINE(  16)		this->y = 0;
HXLINE(  15)		this->x = 0;
HXLINE(  25)		this->uiElement = uiElement;
HXLINE(  26)		{
HXLINE(  26)			this->uiElement = uiElement;
HXDLIN(  26)			this->z = uiElement->z;
HXDLIN(  26)			if (uiElement->masked) {
HXLINE(  26)				this->x = (uiElement->x + uiElement->maskX);
HXDLIN(  26)				this->y = (uiElement->y + uiElement->maskY);
HXDLIN(  26)				this->w = uiElement->maskWidth;
HXDLIN(  26)				this->h = uiElement->maskHeight;
            			}
            			else {
HXLINE(  26)				this->x = uiElement->x;
HXDLIN(  26)				this->y = uiElement->y;
HXDLIN(  26)				this->w = uiElement->width;
HXDLIN(  26)				this->h = uiElement->height;
            			}
            		}
            	}

Dynamic Pickable_obj::__CreateEmpty() { return new Pickable_obj; }

void *Pickable_obj::_hx_vtable = 0;

Dynamic Pickable_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Pickable_obj > _hx_result = new Pickable_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Pickable_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5d5b9abe;
}

 ::haxe::ds::StringMap Pickable_obj::FORMULAS;

 ::haxe::ds::StringMap Pickable_obj::ATTRIBUTES;

 ::haxe::ds::StringMap Pickable_obj::FORMULA_NAMES;

::String Pickable_obj::FORMULA_VARYINGS;

::String Pickable_obj::FORMULA_CONSTANTS;

 ::haxe::ds::StringMap Pickable_obj::DEFAULT_FORMULA_VARS;


::hx::ObjectPtr< Pickable_obj > Pickable_obj::__new( ::peote::ui::interactive::Interactive uiElement) {
	::hx::ObjectPtr< Pickable_obj > __this = new Pickable_obj();
	__this->__construct(uiElement);
	return __this;
}

::hx::ObjectPtr< Pickable_obj > Pickable_obj::__alloc(::hx::Ctx *_hx_ctx, ::peote::ui::interactive::Interactive uiElement) {
	Pickable_obj *__this = (Pickable_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Pickable_obj), true, "peote.ui.interactive.Pickable"));
	*(void **)__this = Pickable_obj::_hx_vtable;
	__this->__construct(uiElement);
	return __this;
}

Pickable_obj::Pickable_obj()
{
}

void Pickable_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Pickable);
	HX_MARK_MEMBER_NAME(uiElement,"uiElement");
	HX_MARK_MEMBER_NAME(x,"x");
	HX_MARK_MEMBER_NAME(y,"y");
	HX_MARK_MEMBER_NAME(w,"w");
	HX_MARK_MEMBER_NAME(h,"h");
	HX_MARK_MEMBER_NAME(z,"z");
	HX_MARK_MEMBER_NAME(bytePos,"bytePos");
	HX_MARK_MEMBER_NAME(bufferPointer,"bufferPointer");
	HX_MARK_END_CLASS();
}

void Pickable_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(uiElement,"uiElement");
	HX_VISIT_MEMBER_NAME(x,"x");
	HX_VISIT_MEMBER_NAME(y,"y");
	HX_VISIT_MEMBER_NAME(w,"w");
	HX_VISIT_MEMBER_NAME(h,"h");
	HX_VISIT_MEMBER_NAME(z,"z");
	HX_VISIT_MEMBER_NAME(bytePos,"bytePos");
	HX_VISIT_MEMBER_NAME(bufferPointer,"bufferPointer");
}

::hx::Val Pickable_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return ::hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return ::hx::Val( y ); }
		if (HX_FIELD_EQ(inName,"w") ) { return ::hx::Val( w ); }
		if (HX_FIELD_EQ(inName,"h") ) { return ::hx::Val( h ); }
		if (HX_FIELD_EQ(inName,"z") ) { return ::hx::Val( z ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bytePos") ) { return ::hx::Val( bytePos ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"uiElement") ) { return ::hx::Val( uiElement ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"bufferPointer") ) { return ::hx::Val( bufferPointer ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Pickable_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"FORMULAS") ) { outValue = ( FORMULAS ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"ATTRIBUTES") ) { outValue = ( ATTRIBUTES ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"FORMULA_NAMES") ) { outValue = ( FORMULA_NAMES ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"FORMULA_VARYINGS") ) { outValue = ( FORMULA_VARYINGS ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"FORMULA_CONSTANTS") ) { outValue = ( FORMULA_CONSTANTS ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"DEFAULT_FORMULA_VARS") ) { outValue = ( DEFAULT_FORMULA_VARS ); return true; }
	}
	return false;
}

::hx::Val Pickable_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"w") ) { w=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"h") ) { h=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"z") ) { z=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bytePos") ) { bytePos=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"uiElement") ) { uiElement=inValue.Cast<  ::peote::ui::interactive::Interactive >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"bufferPointer") ) { bufferPointer=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Pickable_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"FORMULAS") ) { FORMULAS=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"ATTRIBUTES") ) { ATTRIBUTES=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"FORMULA_NAMES") ) { FORMULA_NAMES=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"FORMULA_VARYINGS") ) { FORMULA_VARYINGS=ioValue.Cast< ::String >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"FORMULA_CONSTANTS") ) { FORMULA_CONSTANTS=ioValue.Cast< ::String >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"DEFAULT_FORMULA_VARS") ) { DEFAULT_FORMULA_VARS=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
	}
	return false;
}

void Pickable_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("uiElement",c8,a2,ab,b1));
	outFields->push(HX_("x",78,00,00,00));
	outFields->push(HX_("y",79,00,00,00));
	outFields->push(HX_("w",77,00,00,00));
	outFields->push(HX_("h",68,00,00,00));
	outFields->push(HX_("z",7a,00,00,00));
	outFields->push(HX_("bytePos",6c,0b,e1,59));
	outFields->push(HX_("bufferPointer",9d,cb,9f,86));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Pickable_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::peote::ui::interactive::Interactive */ ,(int)offsetof(Pickable_obj,uiElement),HX_("uiElement",c8,a2,ab,b1)},
	{::hx::fsInt,(int)offsetof(Pickable_obj,x),HX_("x",78,00,00,00)},
	{::hx::fsInt,(int)offsetof(Pickable_obj,y),HX_("y",79,00,00,00)},
	{::hx::fsInt,(int)offsetof(Pickable_obj,w),HX_("w",77,00,00,00)},
	{::hx::fsInt,(int)offsetof(Pickable_obj,h),HX_("h",68,00,00,00)},
	{::hx::fsInt,(int)offsetof(Pickable_obj,z),HX_("z",7a,00,00,00)},
	{::hx::fsInt,(int)offsetof(Pickable_obj,bytePos),HX_("bytePos",6c,0b,e1,59)},
	{::hx::fsFloat,(int)offsetof(Pickable_obj,bufferPointer),HX_("bufferPointer",9d,cb,9f,86)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo Pickable_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &Pickable_obj::FORMULAS,HX_("FORMULAS",4d,22,72,d0)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &Pickable_obj::ATTRIBUTES,HX_("ATTRIBUTES",d7,1c,7b,89)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &Pickable_obj::FORMULA_NAMES,HX_("FORMULA_NAMES",af,82,c8,1e)},
	{::hx::fsString,(void *) &Pickable_obj::FORMULA_VARYINGS,HX_("FORMULA_VARYINGS",5c,59,a0,f6)},
	{::hx::fsString,(void *) &Pickable_obj::FORMULA_CONSTANTS,HX_("FORMULA_CONSTANTS",f6,30,e1,8e)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &Pickable_obj::DEFAULT_FORMULA_VARS,HX_("DEFAULT_FORMULA_VARS",23,8c,5b,00)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String Pickable_obj_sMemberFields[] = {
	HX_("uiElement",c8,a2,ab,b1),
	HX_("x",78,00,00,00),
	HX_("y",79,00,00,00),
	HX_("w",77,00,00,00),
	HX_("h",68,00,00,00),
	HX_("z",7a,00,00,00),
	HX_("bytePos",6c,0b,e1,59),
	HX_("bufferPointer",9d,cb,9f,86),
	::String(null()) };

static void Pickable_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Pickable_obj::FORMULAS,"FORMULAS");
	HX_MARK_MEMBER_NAME(Pickable_obj::ATTRIBUTES,"ATTRIBUTES");
	HX_MARK_MEMBER_NAME(Pickable_obj::FORMULA_NAMES,"FORMULA_NAMES");
	HX_MARK_MEMBER_NAME(Pickable_obj::FORMULA_VARYINGS,"FORMULA_VARYINGS");
	HX_MARK_MEMBER_NAME(Pickable_obj::FORMULA_CONSTANTS,"FORMULA_CONSTANTS");
	HX_MARK_MEMBER_NAME(Pickable_obj::DEFAULT_FORMULA_VARS,"DEFAULT_FORMULA_VARS");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Pickable_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Pickable_obj::FORMULAS,"FORMULAS");
	HX_VISIT_MEMBER_NAME(Pickable_obj::ATTRIBUTES,"ATTRIBUTES");
	HX_VISIT_MEMBER_NAME(Pickable_obj::FORMULA_NAMES,"FORMULA_NAMES");
	HX_VISIT_MEMBER_NAME(Pickable_obj::FORMULA_VARYINGS,"FORMULA_VARYINGS");
	HX_VISIT_MEMBER_NAME(Pickable_obj::FORMULA_CONSTANTS,"FORMULA_CONSTANTS");
	HX_VISIT_MEMBER_NAME(Pickable_obj::DEFAULT_FORMULA_VARS,"DEFAULT_FORMULA_VARS");
};

#endif

::hx::Class Pickable_obj::__mClass;

static ::String Pickable_obj_sStaticFields[] = {
	HX_("FORMULAS",4d,22,72,d0),
	HX_("ATTRIBUTES",d7,1c,7b,89),
	HX_("FORMULA_NAMES",af,82,c8,1e),
	HX_("FORMULA_VARYINGS",5c,59,a0,f6),
	HX_("FORMULA_CONSTANTS",f6,30,e1,8e),
	HX_("DEFAULT_FORMULA_VARS",23,8c,5b,00),
	::String(null())
};

void Pickable_obj::__register()
{
	Pickable_obj _hx_dummy;
	Pickable_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("peote.ui.interactive.Pickable",de,4a,f3,47);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Pickable_obj::__GetStatic;
	__mClass->mSetStaticField = &Pickable_obj::__SetStatic;
	__mClass->mMarkFunc = Pickable_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Pickable_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Pickable_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Pickable_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Pickable_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Pickable_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Pickable_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Pickable_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_0d2151e069c810ec_11_boot)
HXDLIN(  11)		__mClass->__meta__ =  ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("h",68,00,00,00), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("sizeY",78,08,d9,7c),null())))
            				->setFixed(1,HX_("w",77,00,00,00), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("sizeX",77,08,d9,7c),null())))
            				->setFixed(2,HX_("x",78,00,00,00), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("posX",44,84,5c,4a),null())))
            				->setFixed(3,HX_("y",79,00,00,00), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("posY",45,84,5c,4a),null())))
            				->setFixed(4,HX_("z",7a,00,00,00), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("zIndex",38,10,cc,18),null()))))));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_0c0546c56125985e_920_boot)
HXDLIN( 920)		FORMULAS =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::haxe::ds::StringMap _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_0d2151e069c810ec_11_boot)
HXLINE( 928)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 928)			_g->set(HX_("zStart",88,e9,c2,de),HX_("aRotZ",64,63,66,10));
HXDLIN( 928)			_g->set(HX_("zEnd",81,c3,d8,50),HX_("aRotZ",64,63,66,10));
HXDLIN( 928)			_g->set(HX_("z",7a,00,00,00),HX_("aRotZ",64,63,66,10));
HXDLIN( 928)			_g->set(HX_("yStart",29,8d,67,78),HX_("aPos.y",fe,82,62,22));
HXDLIN( 928)			_g->set(HX_("yEnd",e2,8c,2f,50),HX_("aPos.y",fe,82,62,22));
HXDLIN( 928)			_g->set(HX_("y",79,00,00,00),HX_("aPos.y",fe,82,62,22));
HXDLIN( 928)			_g->set(HX_("xStart",ca,30,0c,12),HX_("aPos.x",fd,82,62,22));
HXDLIN( 928)			_g->set(HX_("xEnd",43,56,86,4f),HX_("aPos.x",fd,82,62,22));
HXDLIN( 928)			_g->set(HX_("x",78,00,00,00),HX_("aPos.x",fd,82,62,22));
HXDLIN( 928)			_g->set(HX_("wStart",6b,d4,b0,ab),HX_("aSize.x",cc,ae,44,b7));
HXDLIN( 928)			_g->set(HX_("wEnd",a4,1f,dd,4e),HX_("aSize.x",cc,ae,44,b7));
HXDLIN( 928)			_g->set(HX_("w",77,00,00,00),HX_("aSize.x",cc,ae,44,b7));
HXDLIN( 928)			_g->set(HX_("hStart",da,6a,56,ac),HX_("aSize.y",cd,ae,44,b7));
HXDLIN( 928)			_g->set(HX_("hEnd",53,ec,f2,44),HX_("aSize.y",cd,ae,44,b7));
HXDLIN( 928)			_g->set(HX_("h",68,00,00,00),HX_("aSize.y",cd,ae,44,b7));
HXLINE(  11)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_0d2151e069c810ec_11_boot)
HXDLIN(  11)		ATTRIBUTES = ( ( ::haxe::ds::StringMap)( ::Dynamic(new _hx_Closure_0())()) );
            	}
{
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::haxe::ds::StringMap _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_0d2151e069c810ec_11_boot)
HXLINE( 947)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 947)			_g->set(HX_("sizeX",77,08,d9,7c),HX_("w",77,00,00,00));
HXDLIN( 947)			_g->set(HX_("sizeY",78,08,d9,7c),HX_("h",68,00,00,00));
HXDLIN( 947)			_g->set(HX_("posX",44,84,5c,4a),HX_("x",78,00,00,00));
HXDLIN( 947)			_g->set(HX_("posY",45,84,5c,4a),HX_("y",79,00,00,00));
HXDLIN( 947)			_g->set(HX_("zIndex",38,10,cc,18),HX_("z",7a,00,00,00));
HXLINE(  11)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_0d2151e069c810ec_11_boot)
HXDLIN(  11)		FORMULA_NAMES = ( ( ::haxe::ds::StringMap)( ::Dynamic(new _hx_Closure_0())()) );
            	}
{
            	HX_STACKFRAME(&_hx_pos_0c0546c56125985e_1142_boot)
HXDLIN(1142)		FORMULA_VARYINGS = HX_("",00,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_0c0546c56125985e_1151_boot)
HXDLIN(1151)		FORMULA_CONSTANTS = HX_("",00,00,00,00);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_0c0546c56125985e_1396_boot)
HXDLIN(1396)		DEFAULT_FORMULA_VARS =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
}

} // end namespace peote
} // end namespace ui
} // end namespace interactive
