// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_peote_view_ActiveTexture
#include <peote/view/ActiveTexture.h>
#endif
#ifndef INCLUDED_peote_view_utils_RenderListItem_peote_view_ActiveTexture
#include <peote/view/utils/RenderListItem_peote_view_ActiveTexture.h>
#endif
#ifndef INCLUDED_peote_view_utils_RenderList_peote_view_ActiveTexture
#include <peote/view/utils/RenderList_peote_view_ActiveTexture.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c65ee7727a03ab54_4_new,"peote.view.utils.RenderList_peote_view_ActiveTexture","new",0xc1a9e7c9,"peote.view.utils.RenderList_peote_view_ActiveTexture.new","peote/view/utils/RenderList.hx",4,0x1deb59c6)
HX_LOCAL_STACK_FRAME(_hx_pos_c65ee7727a03ab54_20_add,"peote.view.utils.RenderList_peote_view_ActiveTexture","add",0xc1a0098a,"peote.view.utils.RenderList_peote_view_ActiveTexture.add","peote/view/utils/RenderList.hx",20,0x1deb59c6)
HX_LOCAL_STACK_FRAME(_hx_pos_c65ee7727a03ab54_100_clear,"peote.view.utils.RenderList_peote_view_ActiveTexture","clear",0x9cf4f536,"peote.view.utils.RenderList_peote_view_ActiveTexture.clear","peote/view/utils/RenderList.hx",100,0x1deb59c6)
namespace peote{
namespace view{
namespace utils{

void RenderList_peote_view_ActiveTexture_obj::__construct( ::haxe::ds::ObjectMap itemMap){
            	HX_STACKFRAME(&_hx_pos_c65ee7727a03ab54_4_new)
HXLINE(   7)		this->last = null();
HXLINE(   6)		this->first = null();
HXLINE(  16)		this->itemMap = itemMap;
            	}

Dynamic RenderList_peote_view_ActiveTexture_obj::__CreateEmpty() { return new RenderList_peote_view_ActiveTexture_obj; }

void *RenderList_peote_view_ActiveTexture_obj::_hx_vtable = 0;

Dynamic RenderList_peote_view_ActiveTexture_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< RenderList_peote_view_ActiveTexture_obj > _hx_result = new RenderList_peote_view_ActiveTexture_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool RenderList_peote_view_ActiveTexture_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x20b6a4b9;
}

void RenderList_peote_view_ActiveTexture_obj::add( ::peote::view::ActiveTexture value, ::peote::view::ActiveTexture atValue,bool addBefore){
            	HX_GC_STACKFRAME(&_hx_pos_c65ee7727a03ab54_20_add)
HXLINE(  21)		 ::peote::view::utils::RenderListItem_peote_view_ActiveTexture newItem = null();
HXLINE(  23)		if (addBefore) {
HXLINE(  25)			if (::hx::IsNull( this->first )) {
HXLINE(  25)				newItem = (this->first = (this->last =  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture_obj::__alloc( HX_CTX ,value,null(),null())));
            			}
            			else {
HXLINE(  28)				if (::hx::IsNull( atValue )) {
HXLINE(  29)					newItem = (this->first =  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture_obj::__alloc( HX_CTX ,value,null(),this->first));
            				}
            				else {
HXLINE(  31)					 ::peote::view::utils::RenderListItem_peote_view_ActiveTexture atItem = ( ( ::peote::view::utils::RenderListItem_peote_view_ActiveTexture)(::haxe::IMap_obj::get(this->itemMap,atValue)) );
HXLINE(  32)					if (::hx::IsNotNull( atItem )) {
HXLINE(  33)						newItem =  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture_obj::__alloc( HX_CTX ,value,atItem->prev,atItem);
HXLINE(  34)						if (::hx::IsInstanceEq( atItem,this->first )) {
HXLINE(  34)							this->first = newItem;
            						}
            					}
            					else {
HXLINE(  36)						HX_STACK_DO_THROW(((HX_("Error on add: ",be,ec,3c,42) + ::Std_obj::string(atValue)) + HX_(" is not in list.",18,f2,1d,62)));
            					}
            				}
            			}
            		}
            		else {
HXLINE(  42)			if (::hx::IsNull( this->last )) {
HXLINE(  42)				newItem = (this->first = (this->last =  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture_obj::__alloc( HX_CTX ,value,null(),null())));
            			}
            			else {
HXLINE(  45)				if (::hx::IsNull( atValue )) {
HXLINE(  46)					newItem = (this->last =  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture_obj::__alloc( HX_CTX ,value,this->last,null()));
            				}
            				else {
HXLINE(  48)					 ::peote::view::utils::RenderListItem_peote_view_ActiveTexture atItem1 = ( ( ::peote::view::utils::RenderListItem_peote_view_ActiveTexture)(::haxe::IMap_obj::get(this->itemMap,atValue)) );
HXLINE(  49)					if (::hx::IsNotNull( atItem1 )) {
HXLINE(  50)						newItem =  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture_obj::__alloc( HX_CTX ,value,atItem1,atItem1->next);
HXLINE(  51)						if (::hx::IsInstanceEq( atItem1,this->last )) {
HXLINE(  51)							this->last = newItem;
            						}
            					}
            					else {
HXLINE(  53)						HX_STACK_DO_THROW(((HX_("Error on add: ",be,ec,3c,42) + ::Std_obj::string(atValue)) + HX_(" is not in list.",18,f2,1d,62)));
            					}
            				}
            			}
            		}
HXLINE(  59)		 ::peote::view::utils::RenderListItem_peote_view_ActiveTexture oldItem = ( ( ::peote::view::utils::RenderListItem_peote_view_ActiveTexture)(::haxe::IMap_obj::get(this->itemMap,value)) );
HXLINE(  60)		if (::hx::IsNotNull( oldItem )) {
HXLINE(  60)			 ::peote::view::utils::RenderListItem_peote_view_ActiveTexture item = oldItem;
HXDLIN(  60)			if (::hx::IsInstanceEq( item,this->first )) {
HXLINE(  60)				this->first = item->next;
            			}
HXDLIN(  60)			if (::hx::IsInstanceEq( item,this->last )) {
HXLINE(  60)				this->last = item->prev;
            			}
HXDLIN(  60)			{
HXLINE(  60)				if (::hx::IsNotNull( item->prev )) {
HXLINE(  60)					item->prev->next = item->next;
            				}
HXDLIN(  60)				if (::hx::IsNotNull( item->next )) {
HXLINE(  60)					item->next->prev = item->prev;
            				}
            			}
HXDLIN(  60)			item = null();
            		}
HXLINE(  61)		::haxe::IMap_obj::set(this->itemMap,value,newItem);
            	}


HX_DEFINE_DYNAMIC_FUNC3(RenderList_peote_view_ActiveTexture_obj,add,(void))

void RenderList_peote_view_ActiveTexture_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_c65ee7727a03ab54_100_clear)
HXDLIN( 100)		while(::hx::IsNotNull( this->first )){
HXLINE( 101)			if (::hx::IsNotNull( this->last->value )) {
HXLINE( 101)				::haxe::IMap_obj::remove(this->itemMap,this->last->value);
            			}
HXLINE( 102)			{
HXLINE( 102)				 ::peote::view::utils::RenderListItem_peote_view_ActiveTexture item = this->last;
HXDLIN( 102)				if (::hx::IsInstanceEq( item,this->first )) {
HXLINE( 102)					this->first = item->next;
            				}
HXDLIN( 102)				if (::hx::IsInstanceEq( item,this->last )) {
HXLINE( 102)					this->last = item->prev;
            				}
HXDLIN( 102)				{
HXLINE( 102)					if (::hx::IsNotNull( item->prev )) {
HXLINE( 102)						item->prev->next = item->next;
            					}
HXDLIN( 102)					if (::hx::IsNotNull( item->next )) {
HXLINE( 102)						item->next->prev = item->prev;
            					}
            				}
HXDLIN( 102)				item = null();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(RenderList_peote_view_ActiveTexture_obj,clear,(void))


::hx::ObjectPtr< RenderList_peote_view_ActiveTexture_obj > RenderList_peote_view_ActiveTexture_obj::__new( ::haxe::ds::ObjectMap itemMap) {
	::hx::ObjectPtr< RenderList_peote_view_ActiveTexture_obj > __this = new RenderList_peote_view_ActiveTexture_obj();
	__this->__construct(itemMap);
	return __this;
}

::hx::ObjectPtr< RenderList_peote_view_ActiveTexture_obj > RenderList_peote_view_ActiveTexture_obj::__alloc(::hx::Ctx *_hx_ctx, ::haxe::ds::ObjectMap itemMap) {
	RenderList_peote_view_ActiveTexture_obj *__this = (RenderList_peote_view_ActiveTexture_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(RenderList_peote_view_ActiveTexture_obj), true, "peote.view.utils.RenderList_peote_view_ActiveTexture"));
	*(void **)__this = RenderList_peote_view_ActiveTexture_obj::_hx_vtable;
	__this->__construct(itemMap);
	return __this;
}

RenderList_peote_view_ActiveTexture_obj::RenderList_peote_view_ActiveTexture_obj()
{
}

void RenderList_peote_view_ActiveTexture_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(RenderList_peote_view_ActiveTexture);
	HX_MARK_MEMBER_NAME(first,"first");
	HX_MARK_MEMBER_NAME(last,"last");
	HX_MARK_MEMBER_NAME(itemMap,"itemMap");
	HX_MARK_END_CLASS();
}

void RenderList_peote_view_ActiveTexture_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(first,"first");
	HX_VISIT_MEMBER_NAME(last,"last");
	HX_VISIT_MEMBER_NAME(itemMap,"itemMap");
}

::hx::Val RenderList_peote_view_ActiveTexture_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return ::hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"last") ) { return ::hx::Val( last ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"first") ) { return ::hx::Val( first ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"itemMap") ) { return ::hx::Val( itemMap ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val RenderList_peote_view_ActiveTexture_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"last") ) { last=inValue.Cast<  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"first") ) { first=inValue.Cast<  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"itemMap") ) { itemMap=inValue.Cast<  ::haxe::ds::ObjectMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void RenderList_peote_view_ActiveTexture_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("first",30,78,9d,00));
	outFields->push(HX_("last",56,0a,ad,47));
	outFields->push(HX_("itemMap",49,2b,73,df));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo RenderList_peote_view_ActiveTexture_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture */ ,(int)offsetof(RenderList_peote_view_ActiveTexture_obj,first),HX_("first",30,78,9d,00)},
	{::hx::fsObject /*  ::peote::view::utils::RenderListItem_peote_view_ActiveTexture */ ,(int)offsetof(RenderList_peote_view_ActiveTexture_obj,last),HX_("last",56,0a,ad,47)},
	{::hx::fsObject /*  ::haxe::ds::ObjectMap */ ,(int)offsetof(RenderList_peote_view_ActiveTexture_obj,itemMap),HX_("itemMap",49,2b,73,df)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *RenderList_peote_view_ActiveTexture_obj_sStaticStorageInfo = 0;
#endif

static ::String RenderList_peote_view_ActiveTexture_obj_sMemberFields[] = {
	HX_("first",30,78,9d,00),
	HX_("last",56,0a,ad,47),
	HX_("itemMap",49,2b,73,df),
	HX_("add",21,f2,49,00),
	HX_("clear",8d,71,5b,48),
	::String(null()) };

::hx::Class RenderList_peote_view_ActiveTexture_obj::__mClass;

void RenderList_peote_view_ActiveTexture_obj::__register()
{
	RenderList_peote_view_ActiveTexture_obj _hx_dummy;
	RenderList_peote_view_ActiveTexture_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("peote.view.utils.RenderList_peote_view_ActiveTexture",57,4f,3e,ec);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(RenderList_peote_view_ActiveTexture_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< RenderList_peote_view_ActiveTexture_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RenderList_peote_view_ActiveTexture_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RenderList_peote_view_ActiveTexture_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace peote
} // end namespace view
} // end namespace utils
