// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeCFFI
#include <lime/_internal/backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Void
#include <lime/app/_Event_Int_Void.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_f2b41f959dca9627_143_exit,"lime.system.System","exit",0x19210697,"lime.system.System.exit","lime/system/System.hx",143,0x6434b429)
HX_LOCAL_STACK_FRAME(_hx_pos_f2b41f959dca9627_271_getTimer,"lime.system.System","getTimer",0xb1bf8f48,"lime.system.System.getTimer","lime/system/System.hx",271,0x6434b429)
HX_LOCAL_STACK_FRAME(_hx_pos_f2b41f959dca9627_426___parseArguments,"lime.system.System","__parseArguments",0xf4d0dcbc,"lime.system.System.__parseArguments","lime/system/System.hx",426,0x6434b429)
HX_LOCAL_STACK_FRAME(_hx_pos_f2b41f959dca9627_530___registerEntryPoint,"lime.system.System","__registerEntryPoint",0x78d55f5a,"lime.system.System.__registerEntryPoint","lime/system/System.hx",530,0x6434b429)
namespace lime{
namespace _hx_system{

void System_obj::__construct() { }

Dynamic System_obj::__CreateEmpty() { return new System_obj; }

void *System_obj::_hx_vtable = 0;

Dynamic System_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< System_obj > _hx_result = new System_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool System_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0470bdb7;
}

 ::haxe::ds::StringMap System_obj::_hx___applicationEntryPoint;

void System_obj::exit(int code){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_143_exit)
HXLINE( 145)		if (::hx::IsNotNull( ::lime::app::Application_obj::current )) {
HXLINE( 147)			::lime::app::Application_obj::current->onExit->dispatch(code);
HXLINE( 149)			if (::lime::app::Application_obj::current->onExit->canceled) {
HXLINE( 151)				return;
            			}
            		}
HXLINE( 157)		::Sys_obj::exit(code);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(System_obj,exit,(void))

int System_obj::getTimer(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_271_getTimer)
HXDLIN( 271)		return ( (int)(::lime::_internal::backend::native::NativeCFFI_obj::lime_system_get_timer()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,getTimer,return )

void System_obj::_hx___parseArguments( ::Dynamic attributes){
            	HX_GC_STACKFRAME(&_hx_pos_f2b41f959dca9627_426___parseArguments)
HXLINE( 429)		::Array< ::String > arguments = ::Sys_obj::args();
HXLINE( 430)		 ::EReg stripQuotes =  ::EReg_obj::__alloc( HX_CTX ,HX_("^['\"](.*)['\"]$",13,22,1b,37),HX_("",00,00,00,00));
HXLINE( 431)		int equals;
HXDLIN( 431)		::String argValue;
HXDLIN( 431)		 ::haxe::ds::StringMap parameters = null();
HXLINE( 432)		::String windowParamPrefix = HX_("--window-",dd,62,c2,0a);
HXLINE( 434)		if (::hx::IsNotNull( arguments )) {
HXLINE( 436)			int _g = 0;
HXDLIN( 436)			while((_g < arguments->length)){
HXLINE( 436)				::String argument = arguments->__get(_g);
HXDLIN( 436)				_g = (_g + 1);
HXLINE( 438)				equals = argument.indexOf(HX_("=",3d,00,00,00),null());
HXLINE( 440)				if ((equals > 0)) {
HXLINE( 442)					argValue = argument.substr((equals + 1),null());
HXLINE( 444)					if (stripQuotes->match(argValue)) {
HXLINE( 446)						argValue = stripQuotes->matched(1);
            					}
HXLINE( 449)					if (::hx::IsNull( parameters )) {
HXLINE( 449)						parameters =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            					}
HXLINE( 450)					parameters->set(argument.substr(0,equals),argValue);
            				}
            			}
            		}
HXLINE( 455)		if (::hx::IsNotNull( parameters )) {
HXLINE( 457)			if (::hx::IsNull( attributes->__Field(HX_("parameters",aa,be,7e,51),::hx::paccDynamic) )) {
HXLINE( 457)				attributes->__SetField(HX_("parameters",aa,be,7e,51), ::Dynamic(::hx::Anon_obj::Create(0)),::hx::paccDynamic);
            			}
HXLINE( 458)			if (::hx::IsNull( attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic) )) {
HXLINE( 458)				attributes->__SetField(HX_("context",ef,95,77,19), ::Dynamic(::hx::Anon_obj::Create(0)),::hx::paccDynamic);
            			}
HXLINE( 460)			{
HXLINE( 460)				 ::Dynamic parameter = parameters->keys();
HXDLIN( 460)				while(( (bool)(parameter->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 460)					::String parameter1 = ( (::String)(parameter->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 462)					argValue = parameters->get_string(parameter1);
HXLINE( 464)					if (::StringTools_obj::startsWith(parameter1,windowParamPrefix)) {
HXLINE( 466)						::String _hx_switch_0 = parameter1.substr(windowParamPrefix.length,null());
            						if (  (_hx_switch_0==HX_("allow-high-dpi",36,e5,66,be)) ){
HXLINE( 469)							attributes->__SetField(HX_("allowHighDPI",92,07,a2,b4),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 469)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("always-on-top",25,b6,1e,79)) ){
HXLINE( 471)							attributes->__SetField(HX_("alwaysOnTop",67,4d,53,16),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 471)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("antialiasing",f4,16,b3,48)) ){
HXLINE( 473)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("antialiasing",f4,16,b3,48),::Std_obj::parseInt(argValue),::hx::paccDynamic);
HXDLIN( 473)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("background",ee,93,1d,26)) ){
HXLINE( 475)							 ::Dynamic _hx_tmp;
HXDLIN( 475)							bool _hx_tmp1;
HXDLIN( 475)							if ((argValue != HX_("",00,00,00,00))) {
HXLINE( 475)								_hx_tmp1 = (argValue == HX_("null",87,9e,0e,49));
            							}
            							else {
HXLINE( 475)								_hx_tmp1 = true;
            							}
HXDLIN( 475)							if (_hx_tmp1) {
HXLINE( 475)								_hx_tmp = null();
            							}
            							else {
HXLINE( 475)								_hx_tmp = ::Std_obj::parseInt(argValue);
            							}
HXDLIN( 475)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("background",ee,93,1d,26),_hx_tmp,::hx::paccDynamic);
HXDLIN( 475)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("borderless",45,46,71,17)) ){
HXLINE( 477)							attributes->__SetField(HX_("borderless",45,46,71,17),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 477)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("colorDepth",a0,08,96,fb)) ){
HXLINE( 479)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("colorDepth",a0,08,96,fb),::Std_obj::parseInt(argValue),::hx::paccDynamic);
HXDLIN( 479)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("depth",03,f1,29,d7)) ||  (_hx_switch_0==HX_("depth-buffer",4a,22,d8,98)) ){
HXLINE( 481)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("depth",03,f1,29,d7),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 481)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("fullscreen",3b,3a,b4,f9)) ){
HXLINE( 484)							attributes->__SetField(HX_("fullscreen",3b,3a,b4,f9),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 484)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("hardware",a8,e2,d3,75)) ){
HXLINE( 486)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("hardware",a8,e2,d3,75),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 486)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("height",e7,07,4c,02)) ){
HXLINE( 488)							attributes->__SetField(HX_("height",e7,07,4c,02),::Std_obj::parseInt(argValue),::hx::paccDynamic);
HXDLIN( 488)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("hidden",6a,ff,95,4c)) ){
HXLINE( 490)							attributes->__SetField(HX_("hidden",6a,ff,95,4c),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 490)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("maximized",18,0e,e1,fe)) ){
HXLINE( 492)							attributes->__SetField(HX_("maximized",18,0e,e1,fe),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 492)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("minimized",86,fb,9d,28)) ){
HXLINE( 494)							attributes->__SetField(HX_("minimized",86,fb,9d,28),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 494)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("render-type",51,ca,94,6e)) ||  (_hx_switch_0==HX_("renderer",43,c5,db,b2)) ){
HXLINE( 496)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("type",ba,f2,08,4d),argValue,::hx::paccDynamic);
HXDLIN( 496)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("render-version",e1,a7,f5,24)) ||  (_hx_switch_0==HX_("renderer-version",ce,36,a7,0b)) ){
HXLINE( 498)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("version",18,e7,f1,7c),argValue,::hx::paccDynamic);
HXDLIN( 498)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("resizable",6b,37,50,a9)) ){
HXLINE( 500)							attributes->__SetField(HX_("resizable",6b,37,50,a9),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 500)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("stencil",fc,bd,03,80)) ||  (_hx_switch_0==HX_("stencil-buffer",71,d6,20,82)) ){
HXLINE( 502)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("stencil",fc,bd,03,80),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 502)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("vsync",d1,2d,a8,3d)) ){
HXLINE( 505)							 ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),::hx::paccDynamic))->__SetField(HX_("vsync",d1,2d,a8,3d),(argValue == HX_("true",4e,a7,03,4d)),::hx::paccDynamic);
HXDLIN( 505)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("width",06,b6,62,ca)) ){
HXLINE( 507)							attributes->__SetField(HX_("width",06,b6,62,ca),::Std_obj::parseInt(argValue),::hx::paccDynamic);
HXDLIN( 507)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("x",78,00,00,00)) ){
HXLINE( 509)							attributes->__SetField(HX_("x",78,00,00,00),::Std_obj::parseInt(argValue),::hx::paccDynamic);
HXDLIN( 509)							goto _hx_goto_4;
            						}
            						if (  (_hx_switch_0==HX_("y",79,00,00,00)) ){
HXLINE( 511)							attributes->__SetField(HX_("y",79,00,00,00),::Std_obj::parseInt(argValue),::hx::paccDynamic);
HXDLIN( 511)							goto _hx_goto_4;
            						}
            						/* default */{
            						}
            						_hx_goto_4:;
            					}
            					else {
HXLINE( 515)						if (!(::Reflect_obj::hasField( ::Dynamic(attributes->__Field(HX_("parameters",aa,be,7e,51),::hx::paccDynamic)),parameter1))) {
HXLINE( 517)							::Reflect_obj::setField( ::Dynamic(attributes->__Field(HX_("parameters",aa,be,7e,51),::hx::paccDynamic)),parameter1,argValue);
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(System_obj,_hx___parseArguments,(void))

void System_obj::_hx___registerEntryPoint(::String projectName, ::Dynamic entryPoint){
            	HX_GC_STACKFRAME(&_hx_pos_f2b41f959dca9627_530___registerEntryPoint)
HXLINE( 531)		if (::hx::IsNull( ::lime::_hx_system::System_obj::_hx___applicationEntryPoint )) {
HXLINE( 533)			::lime::_hx_system::System_obj::_hx___applicationEntryPoint =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            		}
HXLINE( 536)		::lime::_hx_system::System_obj::_hx___applicationEntryPoint->set(projectName,entryPoint);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(System_obj,_hx___registerEntryPoint,(void))


System_obj::System_obj()
{
}

bool System_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = exit_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getTimer") ) { outValue = getTimer_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__parseArguments") ) { outValue = _hx___parseArguments_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"__registerEntryPoint") ) { outValue = _hx___registerEntryPoint_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"__applicationEntryPoint") ) { outValue = ( _hx___applicationEntryPoint ); return true; }
	}
	return false;
}

bool System_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 23:
		if (HX_FIELD_EQ(inName,"__applicationEntryPoint") ) { _hx___applicationEntryPoint=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *System_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo System_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &System_obj::_hx___applicationEntryPoint,HX_("__applicationEntryPoint",ce,da,ed,08)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void System_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(System_obj::_hx___applicationEntryPoint,"__applicationEntryPoint");
};

#ifdef HXCPP_VISIT_ALLOCS
static void System_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(System_obj::_hx___applicationEntryPoint,"__applicationEntryPoint");
};

#endif

::hx::Class System_obj::__mClass;

static ::String System_obj_sStaticFields[] = {
	HX_("__applicationEntryPoint",ce,da,ed,08),
	HX_("exit",1e,f7,1d,43),
	HX_("getTimer",4f,cf,0c,70),
	HX_("__parseArguments",c3,fb,f7,66),
	HX_("__registerEntryPoint",e1,0d,46,fe),
	::String(null())
};

void System_obj::__register()
{
	System_obj _hx_dummy;
	System_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("lime.system.System",95,83,bd,ac);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &System_obj::__GetStatic;
	__mClass->mSetStaticField = &System_obj::__SetStatic;
	__mClass->mMarkFunc = System_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(System_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< System_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = System_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = System_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = System_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace system
