// Generated by Haxe 5.0.0-alpha.1+2f4b99d
#include <hxcpp.h>

#ifndef INCLUDED_lime__internal_backend_native_NativeCFFI
#include <lime/_internal/backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo_Cairo
#include <lime/graphics/cairo/Cairo.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_47_new,"lime.graphics.cairo.Cairo","new",0x5bfa2aca,"lime.graphics.cairo.Cairo.new","lime/graphics/cairo/Cairo.hx",47,0x0918a4c7)
HX_LOCAL_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_257_recreate,"lime.graphics.cairo.Cairo","recreate",0x8765b845,"lime.graphics.cairo.Cairo.recreate","lime/graphics/cairo/Cairo.hx",257,0x0918a4c7)
namespace lime{
namespace graphics{
namespace cairo{

void Cairo_obj::__construct( ::Dynamic surface){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_47_new)
HXDLIN(  47)		if (::hx::IsNotNull( surface )) {
HXLINE(  50)			this->handle = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_cairo_create(::hx::DynamicPtr(surface))) );
            		}
            	}

Dynamic Cairo_obj::__CreateEmpty() { return new Cairo_obj; }

void *Cairo_obj::_hx_vtable = 0;

Dynamic Cairo_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Cairo_obj > _hx_result = new Cairo_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Cairo_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0bd6c148;
}

void Cairo_obj::recreate( ::Dynamic surface){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_257_recreate)
HXDLIN( 257)		this->handle = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_cairo_create(::hx::DynamicPtr(surface))) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,recreate,(void))


::hx::ObjectPtr< Cairo_obj > Cairo_obj::__new( ::Dynamic surface) {
	::hx::ObjectPtr< Cairo_obj > __this = new Cairo_obj();
	__this->__construct(surface);
	return __this;
}

::hx::ObjectPtr< Cairo_obj > Cairo_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic surface) {
	Cairo_obj *__this = (Cairo_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Cairo_obj), true, "lime.graphics.cairo.Cairo"));
	*(void **)__this = Cairo_obj::_hx_vtable;
	__this->__construct(surface);
	return __this;
}

Cairo_obj::Cairo_obj()
{
}

void Cairo_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Cairo);
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_END_CLASS();
}

void Cairo_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(handle,"handle");
}

::hx::Val Cairo_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return ::hx::Val( handle ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"recreate") ) { return ::hx::Val( recreate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Cairo_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Cairo_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("handle",a8,83,fd,b7));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Cairo_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Cairo_obj,handle),HX_("handle",a8,83,fd,b7)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Cairo_obj_sStaticStorageInfo = 0;
#endif

static ::String Cairo_obj_sMemberFields[] = {
	HX_("handle",a8,83,fd,b7),
	HX_("recreate",ef,12,7e,5c),
	::String(null()) };

::hx::Class Cairo_obj::__mClass;

void Cairo_obj::__register()
{
	Cairo_obj _hx_dummy;
	Cairo_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("lime.graphics.cairo.Cairo",d8,bd,0e,04);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Cairo_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Cairo_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Cairo_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Cairo_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace graphics
} // end namespace cairo
